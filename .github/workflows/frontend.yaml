name: Frontend CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false
      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: |
          cd frontend
          pnpm install
      - name: Run checks
        run: |
          cd frontend
          pnpm check
      - name: Build project
        run: |
          cd frontend
          pnpm build

  frontend-cd:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: frontend-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy frontend via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.SSH_TARGET }}/frontend && \
            git pull && \
            export PATH=\$PATH:/root/.local/share/pnpm/ && \
            pnpm install && \
            pnpm build && \
            pm2 delete frontend-app 2>/dev/null || true && \
            pm2 start pnpm --name frontend-app -- start
            pm2 save
          "