name: Backend CI (integration)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  backend-integration-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start all backend services
        run: |
          docker compose -f backend/products/docker-compose.yml up -d --build
          docker compose -f backend/users/docker-compose.yml up -d --build

      - name: Wait for services to be healthy
        run: |
          sleep 20

      - name: Run products tests
        run: |
          docker compose -f backend/products/docker-compose.yml exec -T fastapi_app pytest

      - name: Run users tests
        run: |
          docker compose -f backend/users/docker-compose.yml exec -T fastapi_app pytest

      - name: Stop all services
        if: always()
        run: |
          docker compose -f backend/products/docker-compose.yml down -v
          docker compose -f backend/users/docker-compose.yml down -v